package principal;

import javax.swing.JOptionPane;

import cadastros.*;
import model.exception.CampoEmBrancoException;
import model.exception.DisciplinaNaoAtribuidaException;
import model.exception.ProfessorNaoAtribuidoException;
import view.*;

public class Principal {

	static CadastroAluno cadAluno;
	static CadastroProfessor cadProf;
	static CadastroDisciplina cadDisciplina;
	static CadastroTurma cadTurma;

	private Map<String, Turma> mapaTurmas = new HashMap<>();

	public static void main(String[] args) throws CampoEmBrancoException, DisciplinaNaoAtribuidaException, ProfessorNaoAtribuidoException {

		cadAluno = new CadastroAluno();
		cadProf = new CadastroProfessor();
		cadDisciplina = new CadastroDisciplina();
		cadTurma = new CadastroTurma();

		CadastroProfessor cadastroProfessor = cadProf;
		CadastroDisciplina cadastroDisciplina = cadDisciplina;
		CadastroAluno cadastroAluno = cadAluno;
		MenuTurma.setCadastros(cadastroProfessor, cadastroDisciplina, cadastroAluno);

		int opcao = 0;

		do {
			try {

				opcao = MenuPrincipal.menuOpcoes();
				switch (opcao) {
				case 1:
					MenuAluno.menuAluno(cadAluno);
					break;
				case 2:
					MenuProfessor.menuProfessor(cadProf);
					break;
				case 3:
					MenuDisciplina.menuDisciplina(cadDisciplina);
					break;
				case 4:
					MenuTurma.menuTurma(cadTurma);
					break;
				case 5:
					
				case 0:
					JOptionPane.showMessageDialog(null, "Fechando...");
					break;
				default:
					JOptionPane.showMessageDialog(null, "Opção invalida");
					opcao = -1;
					break;
				}
			} catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(null, "Opção invalida");
				opcao = -1;
			}

		} while (opcao != 0);
		return;

	}
	
	public void imprimirListaPresenca() {
	    String codigoTurma = JOptionPane.showInputDialog("Digite o código da turma: ");
	    
	    // Verifica se a turma existe no mapa de turmas
	    if (mapaTurmas.containsKey(codigoTurma)) {
	        Turma turma = mapaTurmas.get(codigoTurma);

	        // Recupera o professor e a disciplina da turma
	        Professor professor = turma.getProfessor();
	        Disciplina disciplina = turma.getDisciplina();

	        // Monta a lista de presença
	        StringBuilder listaPresenca = new StringBuilder();
	        listaPresenca.append("Lista de Presença\n");
	        listaPresenca.append("Disciplina: ").append(disciplina.getNome()).append("\n");
	        listaPresenca.append("Professor: ").append(professor.getNome()).append("\n");
	        listaPresenca.append("Código da Turma: ").append(turma.getCodigo()).append("\n");
	        listaPresenca.append("Alunos:\n");

	        // Adiciona os alunos à lista de presença
	        for (Aluno aluno : turma.getAlunos()) {
	            listaPresenca.append("Matrícula: ").append(aluno.getMatricula()).append(" - ");
	            listaPresenca.append("Nome: ").append(aluno.getNome()).append("\n");
	        }

	        // Exibe a lista de presença
	        JOptionPane.showMessageDialog(null, listaPresenca.toString());
	    } else {
	        JOptionPane.showMessageDialog(null, "Turma não encontrada!");
	    }
	}
	
	
}
